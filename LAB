public class Main{
    public static void main(String[] args){
        String[] id = {"s12345", "s24567", "s23789", "s14569","s18741"};
    String[]name = {"Ali", "Beng", "Carmen", "Dinesh", "Emilia"};
    float[] marks = {77.9F, 33.5F, 98.3F, 40.5F, 22.4F};
    int[] index ={0,1,2,3,4};

    sortID(id, index);
    printData(id, name, marks, index);

    }

    public static void printArray(String[] array){
        for(String data: array){
            System.out.printf("%-10s", data);
        }
        System.out.println();
    }

    public static void printArray(float[] array){
        for(float data: array){
            System.out.printf("%-10.1f", data);
        }
        System.out.println();
    }

    public static void printData(String[] id, String[]name, float[] marks, int[]index){
        System.out.printf("%-10s %-10s %-10s\n", "Reg No.", "Name", "FOP Marks");
        System.out.println("+---------------------------------------------------+");
        for(int iCounter = 0; iCounter < index.length; iCounter++){
            System.out.printf("%-10s %-10s %-10.1f\n" ,id[index[iCounter]], name[index[iCounter]], marks[index[iCounter]]);
        }
    }

    public static void sortID(String[] id, int[]index){
        int temp;
        for(int i = 0; i<index.length; i++){
            for(int j = 0; j<index.length-i-1; j++){
                if(id[index[j]].compareTo(id[index[j+1]])>0){
                    temp = index[j];
                    index[j] = index[j+1];
                    index[j+1] = temp;
                }
            }
        }
    }
}
===============================
LAB 4 Q 4
public class Main{
    public static void main (String[] args){
        int [][] arr = {{1,5,7}, {3,6,9}, {5,3,8}};
        int [][] rotate = new int[arr.length][arr[0].length];

        for(int i = 0, j=arr.length-1; i<arr.length; i++,j--){
            rotate[0][j] = arr[i][0];
            rotate[1][j] = arr[i][1];
            rotate[2][j] = arr[i][2];
        }

        for(int x = 0; x< rotate.length;x++){
            for(int y = 0; y<rotate[0].length;y++){
                System.out.print(rotate[x][y] + " ");
            }
            System.out.println();
        }
    }
}

LAB 5 Q 5
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.Scanner;

import static java.util.Arrays.*;

public class Main{
    static Random random = new Random();

    public static void main(String[] args) {
        int[] num = new int[20];
        for (int i = 0; i < num.length; i++) {
            num[i] = random.nextInt(101);
            checkRepeat(num, i);
        }

        System.out.println("List: ");
        bubbleSortAscending(num);
        System.out.println(Arrays.toString(num));

        System.out.println("In descending order: ");
        bubbleSortDescending(num);
        System.out.println(Arrays.toString(num));

        bubbleSortAscending(num);

        Scanner sc = new Scanner(System.in);
        System.out.println("Enter a number to search: ");
        int n = sc.nextInt();

        linearSearch(num, n);
        binarySearch(num, n);
    }

    public static void linearSearch(int[] arr, int toFind){
        int loop = 0;
        int position = -1;
        for(int i = 0; i<arr.length; i++){
            if(arr[i] == toFind){
               position = i;
            }
            loop++;
        }
        if(position!= -1) {
            System.out.println(toFind + " found at position " + position);
            System.out.println("Linear Search - " + loop + " loop(s)");
        }else{
            System.out.println("not found");
        }
    }
    
    public static void binarySearch(int[] arr, int toFind){
        int start = 0;
        int end = arr.length-1;
        int position = -1;
        int loop = 0;
        while(end>=start){
            int mid = (start + end)/2;
            if(toFind == arr[mid]){position = mid; loop++;break;}
            else if (toFind < arr[mid]){ end = mid-1; loop++;System.out.println(end + " " + start);}
            else if (toFind > arr[mid]){ start = mid+1; loop++;System.out.println(end + " " + start);}
        }
        System.out.println(position);
        if(position!= -1) {
            System.out.println(toFind + " found at position " + position);
            System.out.println("Binary Search - " + loop + " loop(s)");
        }else{
            System.out.println("not found");
        }
    }

        public static void bubbleSortAscending(int[] arr){
            for(int pass = 0; pass<arr.length; pass++){
                for(int i = 0; i<arr.length-1-pass; i++){
                    if(arr[i] > arr[i+1]){
                        int temp = arr[i];
                        arr[i] = arr[i+1];
                        arr[i+1] = temp;
                    }
                }
            }
        }

    public static void bubbleSortDescending(int[] arr){
        for(int pass = 0; pass<arr.length; pass++){
            for(int i = 0; i<arr.length-1-pass; i++){
                if(arr[i] < arr[i+1]){
                    int temp = arr[i];
                    arr[i] = arr[i+1];
                    arr[i+1] = temp;
                }
            }
        }
    }
}

LAB 8 Q 7
class Money{
    int RM, cents;

    public Money(int RM, int cents){
        this.RM = RM;
        this.cents = cents + RM*100;
    }

    public void round(){
        if(this.cents%5 <= 2){
            this.cents = this.cents - this.cents%5;
        }else if(this.cents%5 <=7){
            this.cents = this.cents - this.cents%5 + 5;
        }else if(this.cents%5 <=9){
            this.cents = this.cents - this.cents%5 + 10;
        }
    }

    public void display(){
        System.out.printf("RM %d.%d", this.cents/100, this.cents%100);
    }

    public void addition(int in_cents){
        this.cents += in_cents;
    }

    public void subtraction(int out_cents){
        this.cents -= out_cents;
    }


}

public class Main{
    public static void main(String[] args){
        Money money = new Money(10,11);
        money.round();
        money.display();
    }
}

LAB 9 Q 4 (error getting all 0)
import java.util.Random;

class DiceGame{
    String p1name, p2name;
    int p1score, p2score;

    public DiceGame(String p1name, String p2name){
        this.p1name = p1name;
        this.p2name = p2name;
    }

    static Random random = new Random();

    int dice1, dice2;
    public void rollDiceGame1(int score){
        dice1 = random.nextInt(1) + 6;
        dice2 = random.nextInt(1) + 6;
        score = score + dice1 + dice2;
        if (dice1 == dice2) {
            dice1 = random.nextInt(1) + 6;
            dice2 = random.nextInt(1) + 6;
        }

    }

    public void playDiceGame1(){
        int round = 1;
        while(p1score<100 && p2score<100) {
            System.out.println("round "+round);
            rollDiceGame1(this.p1score);
            System.out.println(p1name +"'s total score now: " + this.p1score);
            rollDiceGame1(this.p2score);
            System.out.println(p2name +"'s total score now: " + this.p2score);
            round++;
        }
        if(p1score>p2score){
            System.out.println(p1name + " WINS!");
        }else if(p1score<p2score){
            System.out.println(p2name + " WINS!");
        }else{
            System.out.println("replay");
        }
    }

    int diceResult, diceAgain;
    public int rollDiceGame2(int score){
        diceResult = random.nextInt(1)+6;
        score += diceResult;
        if(diceResult == 6){
            diceAgain = random.nextInt(1)+6;
            if(diceAgain!=6){
                score+=diceAgain;
            }else if(diceAgain == 6){
                score -= diceResult;
            }
        }
        return score;
    }

    public void playDiceGame2(){
        int round = 1;
        while(p1score<100 && p2score<100) {
            System.out.println("round "+round);
            rollDiceGame2(this.p1score);
            System.out.println(p1name +"'s total score now: " + p1score);
            rollDiceGame2(this.p2score);
            System.out.println(p2name +"'s total score now: " + p2score);
            round++;
        }
        if(p1score>p2score){
            System.out.println(p1name + " WINS!");
        }else if(p1score<p2score){
            System.out.println(p2name + " WINS!");
        }else{
            System.out.println("replay");
        }
    }

    //1st: roll 2 dices, if both equal, roll again
    //reaches >=100 wins

    //2nd: roll 1 dices, is 6 role one more time, 6 again no score
    //reaches =100 wins
    //scores>100, last score not counted, roll again in next turn
}
public class Main{
    public static void main (String[] args){
        DiceGame game= new DiceGame("Jarry", "Joanna");
        game.playDiceGame1();
        game.playDiceGame2();
    }
}

@ L 9 Q 2
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

class PersonProfile{
    String name;
    char gender;
    String DOB;

    public PersonProfile(String n, char g, String dob){
        this.name = n;
        this.gender = g;
        this.DOB = dob;
    }

    public void display() {
        System.out.printf("Name: %s \nGender: %c \nDate of Birth: %s", this.name, this.gender, this.DOB);
    }
}

class Student extends PersonProfile{
    String fileName;
    int countCourse = 0;
    public Student(String n, char g, String dob, String fileName) {
        super(n, g, dob);
        this.fileName = fileName;
    }

    public void readFile() {
            try {
                Scanner sc = new Scanner(new FileInputStream(fileName));
                while(sc.hasNextLine()) {
                    sc.nextLine();
                    countCourse++;
                }
            } catch (FileNotFoundException e) {
                throw new RuntimeException(e);
            }
        }

    String[] courseCode = new String[countCourse];
    String[] courseName = new String[countCourse];
    String[] semester = new String[countCourse];
    String[] session = new String[countCourse];
    int[] mark = new int[countCourse];
    String[] grade = new String[countCourse];
    int index=0;

        public void store() {
            try {
                Scanner sc = new Scanner(new FileInputStream(fileName));
                while (sc.hasNextLine()) {
                    this.courseCode[index] = sc.nextLine();
                    this.courseName[index] = sc.nextLine();
                    this.semester[index] = sc.nextLine();
                    this.session[index] = sc.nextLine();
                    this.mark[index] = sc.nextInt();
                    sc.nextLine();
                    index++;
                }
            } catch (FileNotFoundException e) {
                throw new RuntimeException(e);
            }
            System.out.println(Arrays.toString(courseCode));
        }

            public void getGrade(int[] mark) {
            for (int i = 0; i<mark.length; i++){
                if(mark[i]>=85){grade[i] = "A";}
                else if(mark[i]>=75){grade[i] = "A-";}
                else if(mark[i]>=70){grade[i] = "B+";}
                else if(mark[i]>=65){grade[i] = "B";}
                else if(mark[i]>=60){grade[i] = "B-";}
                else if(mark[i]>=55){grade[i] = "C+";}
                else if(mark[i]>=50){grade[i] = "C";}
                else if(mark[i]>=45){grade[i] = "D";}
                else if(mark[i]>=35){grade[i] = "E";}
                else{grade[i] = "F";}
            }
    }

    public void displayProfileGrade(){
        for(int i = 0; i <= index; i++){
            System.out.println("Course Name: " + this.courseName[i]);
            System.out.println("Course Code: " + this.courseCode[i]);
            System.out.println("Semester " + this.semester[i]);
            System.out.println("Session: " + this.session[i]);
            System.out.println("Mark: " + this.mark[i]);
            System.out.println("Grade" + this.grade[i]);
        }
    }

}

public class Main{
    public static void main(String[] args){
        Student p1 = new Student("Jarry",'M',"2003-03-13", "C:\\Users\\User\\Videos\\course.txt");
        p1.display();
        p1.readFile();
        p1.displayProfileGrade();
    }
}
